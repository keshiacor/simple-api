name: Cypress Docker Push Keshia
on:
  push:
    branches: ['master']

jobs:
  Cypress-Test:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: Cypress-Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS ECS Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy to EC2
        run: |
          command_id=$(aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --comment "Pulling docker image than run it" \
          --targets "Key=instanceids,Values=i-019ff13ea8e6fde5d,i-0b312705ae0a58c4c" \
          --parameters commands='[
            "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ steps.login-aws-ecr.outputs.registry }}",
            "docker stop api || true",
            "docker pull ${{ steps.login-aws-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPO }}:latest",
            "docker run --rm -d -p 3000:3000 --name api ${{ steps.login-aws-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPO }}:latest"
          ]' --query "Command.CommandId" --output text)

          aws ssm wait command-executed \
          --command-id $command_id \
          --instance-id i-019ff13ea8e6fde5d || true

          status=$(aws ssm list-commands --command-id $command_id --query "Commands[0].StatusDetails" --output text)

          if [ $status == "Success" ]; then
            echo "Command executed successfully"
          else
            echo "Command failed... time to debug"
            exit 1
          fi
